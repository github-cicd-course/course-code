# This workflow adds an automated comment whenever any pull_request is opened. Using target event.
# Unlike the pull_request event, which requires approval for a workflow to run, (e.g. if the pull_request is comming from a fork),
# pull_request_target, is not going to require approval, your comment should be added normally.
name: Pull Request Comment
on:
    pull_request_target:
        types: [opened]
jobs:
    pr-comment:
        runs-on: ubuntu-latest
        # Using actions in steps to write JavaScript in this workflow
        # Open octokit/rest.js to check GitHub REST API client documentation on how to write a comment for pull request
        # On the left side pane open 'Issues' and look for 'Create an issue comment' for usage
        steps:
            - name: Comment on New PRs
              # This action is going to use the GITHUB_TOKEN secret, so if your token does not have the right perrmissions by default it will
              # results in 403 (authorization error) when we run this workflow. Go to your Repository Settings > (left pane) Actions > General
              # and change the workflow permissions to 'Read and write permissions' and save it.
              uses: actions/github-script@v7.0.1
              with:
              # Inputs
              # Context contains information about our repo or about the event thet triggers the workflow
              # Issue number is a pull_request number, so context of issue must contain a issue/pr number 
                script: |
                  github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: 'Tanks for contriuting',
                  });

# After the fix got to your pull requests and re-run the failed job. Should be sucessful and in your pull requests you should see
# automated message 'Thanks for contributing'
